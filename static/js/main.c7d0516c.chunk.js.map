{"version":3,"sources":["config.js","components/API/API.js","components/DefaultNavbar/DefaultNavbar.js","components/BigSpinner/BigSpinner.js","pages/IndexPage.js","pages/NotFoundPage.js","App.js","serviceWorker.js","index.js"],"names":["config","BASE_URL","CONTENTFUL_ACCESS_TOKEN","API","getAllEntryByType","type","order","Promise","resolve","reject","axios","method","url","then","response","data","catch","error","getAssetById","id","DefaultNavbar","props","useState","isMenuShown","setIsMenuShown","color","fixed","className","Brand","Item","renderAs","href","Burger","onClick","Menu","Container","position","Spinner","Column","style","minHeight","display","alignItems","justifyContent","width","height","AboutSection","lazy","EducationSection","EmploymentSection","PortfolioSection","IndexPage","state","isFetching","about","employments","projects","all","result","setState","items","educations","console","log","this","BigSpinner","fallback","size","textAlign","margin","padding","moment","format","Component","NotFoundPage","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c7d0516c.chunk.js","sourcesContent":["const config = {\n  BASE_URL:\n    \"https://cdn.contentful.com/spaces/dg28be1hi2nb/environments/master/\",\n  CONTENTFUL_ACCESS_TOKEN:\n    \"2d019bb559428af5cd6dd2f119693edc3761ea22f0ec186182f052c086677949\",\n};\n\nexport default config;\n","import axios from \"axios\";\nimport config from \"../../config\";\n\nconst API = {\n  getAllEntryByType: (type, order) => {\n    return new Promise(function (resolve, reject) {\n      axios({\n        method: \"get\",\n        url: `${config.BASE_URL}/entries?access_token=${\n          config.CONTENTFUL_ACCESS_TOKEN\n        }&content_type=${type}${order ? \"&order=-fields.startDate\" : \"\"}`,\n      })\n        .then(function (response) {\n          resolve(response.data);\n        })\n        .catch(function (error) {\n          reject(error.response.data);\n        });\n    });\n  },\n\n  getAssetById: (id) => {\n    return new Promise(function (resolve, reject) {\n      axios({\n        method: \"get\",\n        url: `${config.BASE_URL}/assets/${id}?access_token=${config.CONTENTFUL_ACCESS_TOKEN}`,\n      })\n        .then(function (response) {\n          resolve(response.data);\n        })\n        .catch(function (error) {\n          reject(error.response.data);\n        });\n    });\n  },\n};\n\nexport default API;\n","import React, { useState } from \"react\";\nimport Navbar from \"react-bulma-components/lib/components/navbar\";\nimport Container from \"react-bulma-components/lib/components/container\";\n\nconst DefaultNavbar = (props) => {\n  const [isMenuShown, setIsMenuShown] = useState(false);\n\n  return (\n    <Navbar color=\"primary\" fixed=\"top\" className=\"has-text-black\">\n      <Container>\n        <Navbar.Brand>\n          <Navbar.Item renderAs=\"a\" href=\"/\" className=\"has-text-grey-dark\">\n            Denny Pradipta\n          </Navbar.Item>\n          <Navbar.Burger\n            className=\"has-text-grey-dark\"\n            onClick={() => setIsMenuShown(!isMenuShown)}\n          />\n        </Navbar.Brand>\n        <Navbar.Menu className={isMenuShown ? \"is-flex \" : \"\"}>\n          <Navbar.Container position=\"end\">\n            <Navbar.Item\n              className=\"has-text-grey-dark\"\n              onClick={() => setIsMenuShown(!isMenuShown)}\n              href=\"#about\"\n            >\n              About\n            </Navbar.Item>\n            <Navbar.Item\n              className=\"has-text-grey-dark\"\n              onClick={() => setIsMenuShown(!isMenuShown)}\n              href=\"#educations\"\n            >\n              Educations\n            </Navbar.Item>\n            <Navbar.Item\n              className=\"has-text-grey-dark\"\n              onClick={() => setIsMenuShown(!isMenuShown)}\n              href=\"#employments\"\n            >\n              Employments\n            </Navbar.Item>\n            <Navbar.Item\n              className=\"has-text-grey-dark\"\n              onClick={() => setIsMenuShown(!isMenuShown)}\n              href=\"#portfolios\"\n            >\n              Portfolios\n            </Navbar.Item>\n          </Navbar.Container>\n        </Navbar.Menu>\n      </Container>\n    </Navbar>\n  );\n};\n\nexport default DefaultNavbar;\n","import React from \"react\";\nimport Loader from \"react-bulma-components/lib/components/loader\";\nimport { Columns } from \"react-bulma-components\";\n\nconst Spinner = (props) => {\n  return (\n    <Columns className=\"is-centered\">\n      <Columns.Column\n        style={{\n          minHeight: \"100vh\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <Loader\n          style={{ width: \"10rem\", height: \"10rem\" }}\n          className=\"has-text-centered\"\n        />\n      </Columns.Column>\n    </Columns>\n  );\n};\n\nexport default Spinner;\n","import React, { lazy, Suspense, Component } from \"react\";\nimport moment from \"moment-timezone\";\nimport Heading from \"react-bulma-components/lib/components/heading\";\n\nimport API from \"../components/API/API\";\nimport DefaultNavbar from \"components/DefaultNavbar/DefaultNavbar\";\nimport BigSpinner from \"../components/BigSpinner/BigSpinner\";\n\nconst AboutSection = lazy(() => import(\"components/AboutSection/AboutSection\"));\nconst EducationSection = lazy(() =>\n  import(\"components/EducationSection/EducationSection\")\n);\nconst EmploymentSection = lazy(() =>\n  import(\"components/EmploymentSection/EmploymentSection\")\n);\nconst PortfolioSection = lazy(() =>\n  import(\"components/PortfolioSection/PortfolioSection\")\n);\n\nclass IndexPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFetching: true,\n      about: {},\n      employments: [],\n      projects: [],\n    };\n  }\n\n  componentDidMount() {\n    Promise.all([\n      API.getAllEntryByType(\"about\"),\n      API.getAllEntryByType(\"educations\", true),\n      API.getAllEntryByType(\"employments\", true),\n      API.getAllEntryByType(\"projects\", true),\n    ])\n      .then((result) => {\n        this.setState({\n          isFetching: false,\n          about: result[0].items,\n          educations: result[1].items,\n          employments: result[2].items,\n          projects: result[3].items,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          isFetching: false,\n        });\n      });\n  }\n\n  render() {\n    if (this.state.isFetching) {\n      return <BigSpinner />;\n    }\n\n    return (\n      <Suspense fallback={<BigSpinner />}>\n        <DefaultNavbar />\n        <Heading\n          id=\"about\"\n          size={2}\n          className=\"has-text-left has-text-white global-padding global-heading\"\n        >\n          About\n        </Heading>\n        <AboutSection\n          about={this.state.about}\n          isFetching={this.state.isFetching}\n        />\n        <Heading\n          id=\"educations\"\n          size={2}\n          className=\"has-text-left has-text-white global-padding global-heading\"\n        >\n          Educations\n        </Heading>\n        <EducationSection\n          educations={this.state.educations}\n          isFetching={this.state.isFetching}\n        />\n        <Heading\n          id=\"employments\"\n          size={2}\n          className=\"has-text-left has-text-white global-padding global-heading\"\n        >\n          Employments\n        </Heading>\n        <EmploymentSection\n          employments={this.state.employments}\n          isFetching={this.state.isFetching}\n        />\n        <Heading\n          id=\"portfolios\"\n          size={2}\n          className=\"has-text-left has-text-white global-padding global-heading\"\n        >\n          Portfolios\n        </Heading>\n        <PortfolioSection\n          projects={this.state.projects}\n          isFetching={this.state.isFetching}\n        />\n        <p style={{ textAlign: \"center\", margin: \"0 auto\", padding: \"1rem 0\" }}>\n          Copyright (C) Denny Pradipta {moment().format(\"YYYY\")}\n        </p>\n      </Suspense>\n    );\n  }\n}\n\nexport default IndexPage;\n","import React, { Component } from \"react\";\n\nclass NotFoundPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return <>404 Not Found</>;\n  }\n}\n\nexport default NotFoundPage;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Container from \"react-bulma-components/lib/components/container\";\n\nimport IndexPage from \"./pages/IndexPage\";\nimport NotFoundPage from \"./pages/NotFoundPage\";\nimport \"./App.scss\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Router>\n          <Container>\n            <Switch>\n              <Route path=\"/\" exact>\n                <IndexPage></IndexPage>\n              </Route>\n              <Route path=\"*\">\n                <NotFoundPage></NotFoundPage>\n              </Route>\n            </Switch>\n          </Container>\n        </Router>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}